import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Prateek
 */
public class GameView extends javax.swing.JFrame {

    /**
     * Creates new form GameView
     */
    public GameView() {
        initComponents();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        logoPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        scorePanel = new javax.swing.JPanel();
        redLabel1 = new javax.swing.JLabel();
        redG1Label = new javax.swing.JLabel();
        redLabel2 = new javax.swing.JLabel();
        redC1Label = new javax.swing.JLabel();
        redC2Label = new javax.swing.JLabel();
        redLabel3 = new javax.swing.JLabel();
        redLabel4 = new javax.swing.JLabel();
        redLabel5 = new javax.swing.JLabel();
        redLabel6 = new javax.swing.JLabel();
        redLabel7 = new javax.swing.JLabel();
        redLabel8 = new javax.swing.JLabel();
        redL1Label1 = new javax.swing.JLabel();
        redL3Label = new javax.swing.JLabel();
        redL2Label = new javax.swing.JLabel();
        redM1Label = new javax.swing.JLabel();
        redM3Label = new javax.swing.JLabel();
        redM2Label = new javax.swing.JLabel();
        redM4Label = new javax.swing.JLabel();
        redR1Label = new javax.swing.JLabel();
        redR5Label = new javax.swing.JLabel();
        redR2Label = new javax.swing.JLabel();
        redR3Label = new javax.swing.JLabel();
        redR4Label = new javax.swing.JLabel();
        redB1Label = new javax.swing.JLabel();
        redS1Label = new javax.swing.JLabel();
        redB2Label = new javax.swing.JLabel();
        redB3Label = new javax.swing.JLabel();
        redB4Label = new javax.swing.JLabel();
        redF1Label = new javax.swing.JLabel();
        blueB2Label = new javax.swing.JLabel();
        blueB3Label = new javax.swing.JLabel();
        blueB1Label = new javax.swing.JLabel();
        blueS1Label = new javax.swing.JLabel();
        blueB4Label = new javax.swing.JLabel();
        blueF1Label = new javax.swing.JLabel();
        blueL3Label = new javax.swing.JLabel();
        blueL2Label = new javax.swing.JLabel();
        blueM1Label = new javax.swing.JLabel();
        blueM3Label = new javax.swing.JLabel();
        blueM2Label = new javax.swing.JLabel();
        blueM4Label = new javax.swing.JLabel();
        blueR1Label = new javax.swing.JLabel();
        blueR5Label = new javax.swing.JLabel();
        blueR2Label = new javax.swing.JLabel();
        blueR4Label = new javax.swing.JLabel();
        blueR3Label = new javax.swing.JLabel();
        blueLabel7 = new javax.swing.JLabel();
        blueLabel5 = new javax.swing.JLabel();
        blueLabel6 = new javax.swing.JLabel();
        blueLabel3 = new javax.swing.JLabel();
        blueLabel4 = new javax.swing.JLabel();
        blueC1Label = new javax.swing.JLabel();
        blueC2Label = new javax.swing.JLabel();
        blueG1Label = new javax.swing.JLabel();
        blueLabel2 = new javax.swing.JLabel();
        blueL1Label = new javax.swing.JLabel();
        blueLabel8 = new javax.swing.JLabel();
        blueLabel1 = new javax.swing.JLabel();
        gamePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gameTable = new javax.swing.JTable();
        historyPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        logoLabel.setText("");

        javax.swing.GroupLayout logoPanelLayout = new javax.swing.GroupLayout(logoPanel);
        logoPanel.setLayout(logoPanelLayout);
        logoPanelLayout.setHorizontalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        logoPanelLayout.setVerticalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addContainerGap())
        );

        redLabel1.setForeground(new java.awt.Color(255, 0, 0));
        redLabel1.setText("G");

        redG1Label.setText("");
        redG1Label.setName("0"); // NOI18N

        redLabel2.setForeground(new java.awt.Color(255, 0, 0));
        redLabel2.setText("C");

        redC1Label.setText("");
        redC1Label.setName("1"); // NOI18N

        redC2Label.setText("");
        redC2Label.setName("2"); // NOI18N

        redLabel3.setForeground(new java.awt.Color(255, 0, 0));
        redLabel3.setText("L");

        redLabel4.setForeground(new java.awt.Color(255, 0, 0));
        redLabel4.setText("M");

        redLabel5.setForeground(new java.awt.Color(255, 0, 0));
        redLabel5.setText("R");

        redLabel6.setForeground(new java.awt.Color(255, 0, 0));
        redLabel6.setText("S");

        redLabel7.setForeground(new java.awt.Color(255, 0, 0));
        redLabel7.setText("B");

        redLabel8.setForeground(new java.awt.Color(255, 0, 0));
        redLabel8.setText("F");

        redL1Label1.setText("");
        redL1Label1.setName("3"); // NOI18N

        redL3Label.setText("");
        redL3Label.setName("5"); // NOI18N

        redL2Label.setText("");
        redL2Label.setName("4"); // NOI18N

        redM1Label.setText("");
        redM1Label.setName("6"); // NOI18N

        redM3Label.setText("");
        redM3Label.setName("8"); // NOI18N

        redM2Label.setText("");
        redM2Label.setName("7"); // NOI18N

        redM4Label.setText("");
        redM4Label.setName("9"); // NOI18N

        redR1Label.setText("");
        redR1Label.setName("10"); // NOI18N

        redR5Label.setText("");
        redR5Label.setName("14"); // NOI18N

        redR2Label.setText("");
        redR2Label.setName("11"); // NOI18N

        redR3Label.setText("");
        redR3Label.setName("12"); // NOI18N

        redR4Label.setText("");
        redR4Label.setName("13"); // NOI18N

        redB1Label.setText("");
        redB1Label.setName("16"); // NOI18N

        redS1Label.setText("");
        redS1Label.setName("15"); // NOI18N

        redB2Label.setText("");
        redB2Label.setName("17"); // NOI18N

        redB3Label.setText("");
        redB3Label.setName("18"); // NOI18N

        redB4Label.setText("");
        redB4Label.setName("19"); // NOI18N

        redF1Label.setText("");
        redF1Label.setName("20"); // NOI18N

        blueB2Label.setText("");
        blueB2Label.setName("38"); // NOI18N

        blueB3Label.setText("");
        blueB3Label.setName("39"); // NOI18N

        blueB1Label.setText("");
        blueB1Label.setName("37"); // NOI18N

        blueS1Label.setText("");
        blueS1Label.setName("36"); // NOI18N

        blueB4Label.setText("");
        blueB4Label.setName("40"); // NOI18N

        blueF1Label.setText("");
        blueF1Label.setName("41"); // NOI18N

        blueL3Label.setText("");
        blueL3Label.setName("26"); // NOI18N

        blueL2Label.setText("");
        blueL2Label.setName("25"); // NOI18N

        blueM1Label.setText("");
        blueM1Label.setName("27"); // NOI18N

        blueM3Label.setText("");
        blueM3Label.setName("29"); // NOI18N

        blueM2Label.setText("");
        blueM2Label.setName("28"); // NOI18N

        blueM4Label.setText("");
        blueM4Label.setName("30"); // NOI18N

        blueR1Label.setText("");
        blueR1Label.setName("31"); // NOI18N

        blueR5Label.setText("");
        blueR5Label.setName("35"); // NOI18N

        blueR2Label.setText("");
        blueR2Label.setName("32"); // NOI18N

        blueR4Label.setText("");
        blueR4Label.setName("34"); // NOI18N

        blueR3Label.setText("");
        blueR3Label.setName("33"); // NOI18N

        blueLabel7.setForeground(new java.awt.Color(0, 0, 255));
        blueLabel7.setText("B");

        blueLabel5.setForeground(new java.awt.Color(0, 0, 255));
        blueLabel5.setText("R");

        blueLabel6.setForeground(new java.awt.Color(0, 0, 255));
        blueLabel6.setText("S");

        blueLabel3.setForeground(new java.awt.Color(0, 0, 255));
        blueLabel3.setText("L");

        blueLabel4.setForeground(new java.awt.Color(0, 0, 255));
        blueLabel4.setText("M");

        blueC1Label.setText("");
        blueC1Label.setName("22"); // NOI18N

        blueC2Label.setText("");
        blueC2Label.setName("23"); // NOI18N

        blueG1Label.setText("");
        blueG1Label.setName("21"); // NOI18N

        blueLabel2.setForeground(new java.awt.Color(0, 0, 255));
        blueLabel2.setText("C");

        blueL1Label.setText("");
        blueL1Label.setName("24"); // NOI18N

        blueLabel8.setForeground(new java.awt.Color(0, 0, 255));
        blueLabel8.setText("F");

        blueLabel1.setForeground(new java.awt.Color(0, 0, 255));
        blueLabel1.setText("G");

        javax.swing.GroupLayout scorePanelLayout = new javax.swing.GroupLayout(scorePanel);
        scorePanel.setLayout(scorePanelLayout);
        scorePanelLayout.setHorizontalGroup(
            scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scorePanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(redLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(redLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(redLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(redLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(redLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(redLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(redLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(redLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(scorePanelLayout.createSequentialGroup()
                                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(redG1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(redC1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(redL1Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(redM1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(redR1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(scorePanelLayout.createSequentialGroup()
                                        .addComponent(redR2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(redR3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(redR4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(redR5Label, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(scorePanelLayout.createSequentialGroup()
                                        .addComponent(redL2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(redL3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(redC2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(scorePanelLayout.createSequentialGroup()
                                        .addComponent(redM2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(redM3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(redM4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(redS1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(scorePanelLayout.createSequentialGroup()
                                .addComponent(redB1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(redB2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(redB3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(redB4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(redF1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(scorePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(blueLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(blueLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(blueLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(blueLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(blueLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(blueLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(blueLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(blueLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(scorePanelLayout.createSequentialGroup()
                                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(blueG1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(blueC1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(blueL1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(blueM1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(blueR1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(scorePanelLayout.createSequentialGroup()
                                        .addComponent(blueR2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blueR3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blueR4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blueR5Label, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(scorePanelLayout.createSequentialGroup()
                                        .addComponent(blueL2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blueL3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(blueC2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(scorePanelLayout.createSequentialGroup()
                                        .addComponent(blueM2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blueM3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(blueM4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(blueS1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(scorePanelLayout.createSequentialGroup()
                                .addComponent(blueB1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blueB2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blueB3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blueB4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(blueF1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        scorePanelLayout.setVerticalGroup(
            scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redLabel1)
                    .addComponent(redG1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redLabel2)
                    .addComponent(redC1Label)
                    .addComponent(redC2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redLabel3)
                    .addComponent(redL1Label1)
                    .addComponent(redL2Label)
                    .addComponent(redL3Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redLabel4)
                    .addComponent(redM1Label)
                    .addComponent(redM2Label)
                    .addComponent(redM4Label)
                    .addComponent(redM3Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redLabel5)
                    .addComponent(redR1Label)
                    .addComponent(redR5Label)
                    .addComponent(redR2Label)
                    .addComponent(redR3Label)
                    .addComponent(redR4Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redLabel6)
                    .addComponent(redS1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redLabel7)
                    .addComponent(redB1Label)
                    .addComponent(redB2Label)
                    .addComponent(redB3Label)
                    .addComponent(redB4Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redLabel8)
                    .addComponent(redF1Label))
                .addGap(39, 39, 39)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueLabel1)
                    .addComponent(blueG1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueLabel2)
                    .addComponent(blueC1Label)
                    .addComponent(blueC2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueLabel3)
                    .addComponent(blueL1Label)
                    .addComponent(blueL2Label)
                    .addComponent(blueL3Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueLabel4)
                    .addComponent(blueM1Label)
                    .addComponent(blueM2Label)
                    .addComponent(blueM4Label)
                    .addComponent(blueM3Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueLabel5)
                    .addComponent(blueR1Label)
                    .addComponent(blueR5Label)
                    .addComponent(blueR2Label)
                    .addComponent(blueR3Label)
                    .addComponent(blueR4Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueLabel6)
                    .addComponent(blueS1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueLabel7)
                    .addComponent(blueB1Label)
                    .addComponent(blueB2Label)
                    .addComponent(blueB3Label)
                    .addComponent(blueB4Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueLabel8)
                    .addComponent(blueF1Label))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        gameTable.setBackground(getBackground());
        gamePanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gameTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"      A", null, null, null, null, null, null, null},
                {"      B", null, null, null, null, null, null, null},
                {"      C", null, null, null, null, null, null, null},
                {"      D", null, null, null, null, null, null, null},
                {"      E", null, null, null, null, null, null, null},
                {"      F", null, null, null, null, null, null, null},
                {"      G", null, null, null, null, null, null, null}
            },
            new String [] {
                "", "1", "2", "3", "4", "5", "6", "7"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gameTable.setAlignmentY(2.0F);
        gameTable.setFocusable(false);
        gameTable.setMinimumSize(new java.awt.Dimension(200, 200));
        gameTable.setPreferredSize(new java.awt.Dimension(600, 350));
        gameTable.setRowHeight(50);
        gameTable.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(gameTable);
        gameTable.getColumnModel().getColumn(0).setResizable(false);
        gameTable.getColumnModel().getColumn(1).setResizable(false);
        gameTable.getColumnModel().getColumn(2).setResizable(false);
        gameTable.getColumnModel().getColumn(3).setResizable(false);
        gameTable.getColumnModel().getColumn(4).setResizable(false);
        gameTable.getColumnModel().getColumn(5).setResizable(false);
        gameTable.getColumnModel().getColumn(6).setResizable(false);
        gameTable.getColumnModel().getColumn(7).setResizable(false);

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
        );

        historyTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Player", "Position","Attack"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        historyTable.setModel(historyTableModel);
        jScrollPane2.setViewportView(historyTable);
        historyTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        historyTable.getColumnModel().getColumn(0).setResizable(false);
        historyTable.getColumnModel().getColumn(1).setResizable(false);
        historyTable.getColumnModel().getColumn(2).setResizable(false);
        historyTable.getColumnModel().getColumn(3).setPreferredWidth(40);
        historyTable.getColumnModel().getColumn(3).setResizable(false);

        javax.swing.GroupLayout historyPanelLayout = new javax.swing.GroupLayout(historyPanel);
        historyPanel.setLayout(historyPanelLayout);
        historyPanelLayout.setHorizontalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historyPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        historyPanelLayout.setVerticalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scorePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scorePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(historyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 90, Short.MAX_VALUE))))
        );
        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("./images/avishkar2k12.png")));
        
        
        moveCount = 0;
        
        
        pack();
    }// </editor-fold>

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameView().setVisible(true);
            }
        });
    }
    
    public void display(String message) {
    	JOptionPane.showMessageDialog(null, message, "Announcement", JOptionPane.INFORMATION_MESSAGE);
    	System.exit(0);
    }
    
    public void update(GameState gamestate)
    {
        moveCount++;
        Component comp[] = scorePanel.getComponents();
        for(int i=0;i<42;i++) {
            for(int j=0;j<comp.length;j++)
            {
                if(comp[j].getName()!=null)
                {
                    if((comp[j].getName()).equals(Integer.toString(i)))
                    {
                        if(UniqueID.isAlive[i]) {
                            if(i<=20)
                                 ((JLabel)comp[j]).setIcon(new javax.swing.ImageIcon(getClass().getResource("./images/full_red.png")));
                            else
                                ((JLabel)comp[j]).setIcon(new javax.swing.ImageIcon(getClass().getResource("./images/full_blue.png")));
                        }
                        else
                        {
                            if(i<=20)
                                 ((JLabel)comp[j]).setIcon(new javax.swing.ImageIcon(getClass().getResource("./images/hollow_red.png")));
                            else
                                ((JLabel)comp[j]).setIcon(new javax.swing.ImageIcon(getClass().getResource("./images/hollow_blue.png")));
                            ((JLabel)comp[j]).setBackground(Color.RED);

                        }
                    }
                }
            }
        }
        scorePanel.repaint();
        for(int i = 1; i <= 7; i++) {
			gameTable.getColumnModel().getColumn(i).setCellRenderer(new ImageRenderer(gamestate.getBoard()));
        }
        gamePanel.repaint();
        if(gamestate.getNextPlayer() == 'B') {
			historyTableModel.addRow(new Object[] {"" + moveCount, "Red", gamestate.getPreviousMove(),gamestate.getAttack()});
	} else if(gamestate.getNextPlayer() == 'R') {
		historyTableModel.addRow(new Object[] {"" + moveCount, "Blue", gamestate.getPreviousMove(),gamestate.getAttack()});
	}
        historyTable.setModel(historyTableModel);
        
    }
    // Variables declaration - do not modify                     
    private javax.swing.JLabel blueB1Label;
    private javax.swing.JLabel blueB2Label;
    private javax.swing.JLabel blueB3Label;
    private javax.swing.JLabel blueB4Label;
    private javax.swing.JLabel blueC1Label;
    private javax.swing.JLabel blueC2Label;
    private javax.swing.JLabel blueF1Label;
    private javax.swing.JLabel blueG1Label;
    private javax.swing.JLabel blueL1Label;
    private javax.swing.JLabel blueL2Label;
    private javax.swing.JLabel blueL3Label;
    private javax.swing.JLabel blueLabel1;
    private javax.swing.JLabel blueLabel2;
    private javax.swing.JLabel blueLabel3;
    private javax.swing.JLabel blueLabel4;
    private javax.swing.JLabel blueLabel5;
    private javax.swing.JLabel blueLabel6;
    private javax.swing.JLabel blueLabel7;
    private javax.swing.JLabel blueLabel8;
    private javax.swing.JLabel blueM1Label;
    private javax.swing.JLabel blueM2Label;
    private javax.swing.JLabel blueM3Label;
    private javax.swing.JLabel blueM4Label;
    private javax.swing.JLabel blueR1Label;
    private javax.swing.JLabel blueR2Label;
    private javax.swing.JLabel blueR3Label;
    private javax.swing.JLabel blueR4Label;
    private javax.swing.JLabel blueR5Label;
    private javax.swing.JLabel blueS1Label;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JPanel historyPanel;
    private javax.swing.JTable historyTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable gameTable;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JLabel redB1Label;
    private javax.swing.JLabel redB2Label;
    private javax.swing.JLabel redB3Label;
    private javax.swing.JLabel redB4Label;
    private javax.swing.JLabel redC1Label;
    private javax.swing.JLabel redC2Label;
    private javax.swing.JLabel redF1Label;
    private javax.swing.JLabel redG1Label;
    private javax.swing.JLabel redL1Label1;
    private javax.swing.JLabel redL2Label;
    private javax.swing.JLabel redL3Label;
    private javax.swing.JLabel redLabel1;
    private javax.swing.JLabel redLabel2;
    private javax.swing.JLabel redLabel3;
    private javax.swing.JLabel redLabel4;
    private javax.swing.JLabel redLabel5;
    private javax.swing.JLabel redLabel6;
    private javax.swing.JLabel redLabel7;
    private javax.swing.JLabel redLabel8;
    private javax.swing.JLabel redM1Label;
    private javax.swing.JLabel redM2Label;
    private javax.swing.JLabel redM3Label;
    private javax.swing.JLabel redM4Label;
    private javax.swing.JLabel redR1Label;
    private javax.swing.JLabel redR2Label;
    private javax.swing.JLabel redR3Label;
    private javax.swing.JLabel redR4Label;
    private javax.swing.JLabel redR5Label;
    private javax.swing.JLabel redS1Label;
    private javax.swing.JPanel scorePanel;
    private javax.swing.table.DefaultTableModel historyTableModel;
    private int moveCount;
    // End of variables declaration                   
}
class ImageRenderer extends DefaultTableCellRenderer {
    private Piece board[][];
    public ImageRenderer(Piece board[][]) {
    	this.board = board;
    }
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, 
            boolean hasFocus, int row, int column) {
        JPanel panel = new JPanel();
        JLabel label = new JLabel();
        if(board[row][column-1].getSymbol()=='I')
        {
            label.setText("");
            panel.setBackground(new Color(51,253,51));
        }
      else
      if(!board[row][column - 1].isShown() && board[row][column-1].getColor()=='R') {
          label.setText("");
          panel.setBackground(java.awt.Color.red);
      }
      else
      if(!board[row][column - 1].isShown() && board[row][column-1].getColor()=='B') {
          label.setText("");
          panel.setBackground(java.awt.Color.blue);
      }
      else
          if(board[row][column-1].getRank() == Rank.WATER)
          {
              label.setText("");
              panel.setBackground(java.awt.Color.black);
          }
      else if(board[row][column-1].isShown() && board[row][column-1].getColor()!=(char)-1) {
              label.setFont(new Font("Courier New", Font.BOLD, 30));
              label.setForeground(Color.WHITE);
              if(board[row][column-1].getSymbol()=='M')
                   label.setFont(new Font("Courier New", Font.BOLD, 20));
              label.setText(""+board[row][column-1].getSymbol());
              panel.setBackground(board[row][column-1].getColor()=='R'?Color.red:Color.blue);
     }
      panel.add(label);
      return panel;
  }
}